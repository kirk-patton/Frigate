version: "3.9"
services:
  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - /home/kpatton/Frigate/Mosquitto/storage/config:/mosquitto/config 
      - /home/kpatton/Frigate/Mosquitto/storage/data:/mosquitto/data 
      - /home/kpatton/Frigate/Mosquitto/storage/log:/mosquitto/log
  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: always
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "1000mb" # update for your cameras based on calculation above
    devices:
      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
      - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      - /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/kpatton/Frigate/config.yaml:/config/config.yml
      - /mnt:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      - "5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    environment:
      TZ: "America/Los_Angeles"
      FRIGATE_RTSP_USER: <CHANGEME>
      FRIGATE_RTSP_PASSWORD: <CHANGEME>
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:latest"
    volumes:
      - lets_encrypt.vol:/etc/tls
      - /home/kpatton/Frigate/HomeAssistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /etc/letsencrypt/homeassistant:/config/ssl
      - /home/kpatton/Frigate/LetsEncrypt
    restart: always
    privileged: true
    ports:
      - "8123:8123"
  shell:
    container_name: shell
    privileged: true # this may not be necessary for all setups
    restart: always
    image: ubuntu:focal
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - lets_encrypt.vol:/etc/tls
  lets_encrypt:
    container_name: lets_encrypt
    image: lets_encrypt:cron
    volumes:
      - lets_encrypt.vol:/etc/tls

volumes:
  lets_encrypt.vol:
    external: true
